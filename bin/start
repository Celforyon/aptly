#!/bin/bash

function f_greprepo() {
	aptly repo list -raw|grep -E "^$1$"
}

function f_repocheck() {
	dist=$1
	if [ -z "$(f_greprepo $dist)" ]; then
		if [ "$AUTO_CREATE_REPO" = "true" ]; then
			repo-create>&2 2>/dev/null $dist
		else
			echo>&2 "[aptly] error: trying to add package to non-existing repo $dist"
			echo err
		fi
	fi
}

function f_publish() {
	path=$1
	filename=$(basename $path)
	ext="${filename##*.}"
	if [ "$ext" = "deb" ]; then
		dist=$(basename $(dirname $path))
		state=$(f_repocheck $dist)
		if [ -z "$state" ]; then
			if [ ! -f debs/$dist/$filename ]; then
				if aptly repo add $dist $path; then
					sname=$dist-$(date '+%Y%m%d_%s')-$RANDOM

					aptly snapshot create $sname from repo $dist
					publish snapshot $sname
					[ ! -d debs/$dist ] && mkdir -p debs/$dist
					cp $path debs/$dist/$filename
				fi
			else
				echo>&2 "[aptly] warning: this package already exists"
			fi
		fi
	else
		echo>&2 "[aptly] error: ignoring file $filename (bad extension: $ext)"
	fi
	rm -f $path												# remove file
	rmdir $(dirname $path)						# remove supposedly dist
	rmdir $(dirname $(dirname $path)) # remove temporary created dir
}

if [ ! -r private.key ]; then
	echo>&2 "[aptly] fatal error: no private.key file"
	exit 1
fi

gpg --no-tty --import private.key
grep -q 'no-tty' ~/.gnupg/gpg.conf||echo>> ~/.gnupg/gpg.conf 'no-tty'

[ -n "$PASSPHRASE" ] && echo>passphrase "$PASSPHRASE"
if [ ! -r passphrase ]; then
	echo>&2 "[aptly] fatal error: no passphrase"
	exit 2
fi

chown root: passphrase
chmod 000 passphrase

inotifywait -rme CLOSE_WRITE --format '%w%f' /shared|while read line; do f_publish $line; done
